#include <stdio.h>
#include<conio.h>
#include<stdlib.h>
#define max_size 100

int stack[max_size];
int top = -1;
int isEmpty() {
    if (top == -1) {
	return 1;
    } else {
	return 0;
    }
}

int isFull() {
    if (top == max_size - 1) {
	return 1;
    } else {
	return 0;
    }
}

void push(int element) {
    if (isFull()) {
	printf("Stack is full, cannot push element\n");
    } else {
	top++;
	stack[top] = element;
	printf("Pushed element: %d\n", element);
    }
}
int pop() {
    int element;
    if (isEmpty()) {
	printf("Stack is empty, cannot pop element\n");
	return -1;
    } else {
	element = stack[top];
	top--;
	return element;
    }
    }
void display() {
    int i;
    if (isEmpty()) {
	printf("Stack is empty, nothing to display\n");
    } else {
	printf("Stack elements:\n");
	for (i = top; i >= 0; i--) {
	    printf("%d\n", stack[i]);
	}
    }
}

void main()
{
clrscr();
push(10);
push(20);
push(30);
display();
printf("Popped element: %d\n", pop());
printf("Popped element: %d\n", pop());
printf("Popped element: %d\n", pop());
display();
getch();
}

